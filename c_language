write a C macro PRINT(x) which prints x
#define PRINT(X) (#x)
the # directive, also called 'Stringizing Operator'

----------------------------
int num;
printf("Enter a number: ");
scanf("%d", &num);
----------------------------

#define and const in C?
#define is a preprocessor directive. Things defined by #define are replaced by
#the preprocessor before compilation begins.
#
const variables are actual variables like other normal variable

The big advantage of const over #define is type checking. We can also have pointers to const variables, we can pass them around, typecase them and any other thing that can be done with a normal variable. One disadvantage that one could think of it extra space for variable which is immaterial due to optimizations done by compilers.




